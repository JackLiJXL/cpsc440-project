Online Problems
Online problems

Online Problems
Online problems
It is a broad class of problems (you could say that living is an online
problem) in which:
The Input is revealed over time (not fully available initially).
We must make decisions along the way.

Online Problems
Example
Imagine you’re an uber driver picking clients.

Online Problems
Example
Imagine you’re an uber driver picking clients.
You don’t know where future clients will appear, but you have to
pick in real time.

Online Problems
How do we measure our performance?

Online Problems
How do we measure our performance?
Given an online problem, a constant c ≤ 1 and some objective
function that we want to maximize, we say an online algorithm is
c-competitive if
E(Output) ≥ cOPT
Where OPT denotes the maximum value that an oracle could get.

Online Problems
A concrete online problem: the Hiring Problem
Motivation: you interview several people for a position, when
should you stop interviewing and hire someone?

Online Problems
Hiring Problem: Toy Instance
Say you’ll interview only 3 people;

Online Problems
Hiring Problem: Toy Instance
Say you’ll interview only 3 people;
You know nothing about them until you interview them;

Online Problems
Hiring Problem: Toy Instance
Say you’ll interview only 3 people;
You know nothing about them until you interview them;
They arrive in a uniform random order;
After an interview:
you can compare and rank seen candidates;
you must either hire the current candidate or call the next one;

Online Problems
Hiring Problem: Toy Instance
Say you’ll interview only 3 people;
You know nothing about them until you interview them;
They arrive in a uniform random order;
After an interview:
you can compare and rank seen candidates;
you must either hire the current candidate or call the next one;
You want to maximize the probability of hiring the best.

Online Problems
3 Candidates Example
Maybe these are the 3 candidates in their arrival order:

Online Problems
3 Candidates Example
Maybe these are the 3 candidates in their arrival order:
So you should pick the first one, but...

Online Problems
Frame Title
You don’t see the future and you have no standards to compare.

Online Problems
Frame Title
You don’t see the future and you have no standards to compare.
Is there a strategy to pick the best with probability higher that 1/3?

Online Problems
3 Candidates Example
There are 6 possible permutations:

Online Problems
3 Candidates Example
There are 6 possible permutations:
Strategy: always reject the first candidate and accept the second
only if better than the first one.

Online Problems
Hiring Problem
Now there are n candidates (n is known);
You know nothing about them until you interview them;
They arrive in a uniform random order;
After an interview:
you can compare and rank seen candidates;
you must either hire the current candidate or call the next one;
You want to maximize the probability of hiring the best.

Online Problems
Now what?
Can you think about a strategy? Will the probability of success
converge to 0?

Online Problems
Now what?
Can you think about a strategy? Will the probability of success
converge to 0?
Consider the following strategy: reject first k candidates and then
propose to the first candidate better than all previous ones.

Online Problems
Probability of success
Let Ai denote the event that the best candidate is the ith candidate.
P(the best is chosen) =
n
�
i=1
P(the best is chosen|Ai)P(Ai)

Online Problems
Probability of success
Define x = k
n, then P(the best is chosen) ≈ x ln(x−1) = −x ln(x).

Online Problems
Probability of success
Define x = k
n, then P(the best is chosen) ≈ x ln(x−1) = −x ln(x).
You can optimize x by taking derivative equal to 0.

Online Problems
Probability of success
Define x = k
n, then P(the best is chosen) ≈ x ln(x−1) = −x ln(x).
You can optimize x by taking derivative equal to 0.
So the optimal choice is to take k ≈ n/e and this guarantees we
choose the best candidate with probability 1/e.

Online Problems
How good is this?
Our objective function was the probability of choosing the best and
we got a probability of 1
e .

Online Problems
How good is this?
Our objective function was the probability of choosing the best and
we got a probability of 1
e .
Therefore, our online algorithm is 1
e -competitive.

Online Problems
How good is this?
Theorem (Dynkin 1963)
In the Hiring Problem, the optimal strategy selects the best
candidate with probability 1
e .

Online Problems
Be careful what you wish for
In the hiring problem, there is 1
e ≈ 37% chance of not hiring
anyone (why?).

Online Problems
Be careful what you wish for
If you reject the first 30% of the candidates (instead of a 1
e
fraction), your chances of getting the best would drop to 36%, but
the chances of no hiring would drop to 30%.
Try to always think about the practical and ethical consequences of
your modeling choices.

Online Problems
Variants of the Problem
Prophet Inequalities
Intuitively this is when you know something about the
candidates beforehand (you read their CVs).
Each candidate xi has a value vi ∼ Xi, where vi is revealed
after the date, but the distributions {Xi}i are known
beforehand.
Objective: maximize the expected value of the chosen
candidate.

Online Problems
Variants of the Problem
Pandora’s Box
Intuitively, here we add a cost on each interview.
Like with prophet inequalities, the values of the candidates
comes from known distributions.
You can choose the order of the candidates, but each
candidate has a price pi you have to pay to interview them.
You can choose any candidate xi as long as you had payed the
corresponding pi.
Objective: maximize expected total gain.

Online Problems
Variants of the Problem
You can also consider richer combinatorial constraints: instead of
just choosing one candidate you may want to choose k or a feasible
set of candidates given some feasibility constraints.