CPSC 420 Lecture 4 : Today’s announcements:
▶ HW1 available on Gradescope, due Jan 19, 23:59
▶ Examlet 1 on Jan 27 in class.
▶ Reading: Voronoi Diagrams [Computational Geometry:
Algorithms and Applications 3rd Edition pg 147]
▶ Reading: Linear Programming [Intro to Algs 4th Ed. by
Cormen, Leiserson, Rivest, Stein Ch. 29-29.2, pg 817]
Today’s Plan
▶ Chan’s Algorithm - analysis
▶ Voronoi diagrams
1 / 9

Chan’s Algorithm with guess g for CH size
Given n points P and a guess g for the number of hull points...
1. Divide P into n/g groups of g points
2. Use Graham’s Scan to find the convex hull of each group in
O(g log g) time per group
2 / 9

Chan’s Algorithm with guess g for CH size
Given n points P and a guess g for the number of hull points...
1. Divide P into n/g groups of g points
2. Use Graham’s Scan to find the convex hull of each group in
O(g log g) time per group
2 / 9

Chan’s Algorithm with guess g for CH size
Given n points P and a guess g for the number of hull points...
1. Divide P into n/g groups of g points
2. Use Graham’s Scan to find the convex hull of each group in
O(g log g) time per group
2 / 9

Chan’s Algorithm with guess g for CH size
Given n points P and a guess g for the number of hull points...
1. Divide P into n/g groups of g points
2. Use Graham’s Scan to find the convex hull of each group in
O(g log g) time per group
3. Find the lowest point p0
4. Gift-wrap (Jarvis March) these convex hulls for g wrap steps.
To find the next hull point pi+1
4.1 find the right-tangent from pi to each group hull in O(log g)
time per group
4.2 pi+1 is rightmost-by-tangent-angle of these tangent points
4.3 If pi+1 = p0 output hull Succeed
5. Output “g is too small!” Fail
Total time: O(n log g).
2 / 9

How to generate guesses
Chan’s Main CH Algorithm
Run Chan’s Alg. with guess g = 4 then g = 16 then g = 256 ...
until it outputs the Convex hull
g = 22t on the tth try.
Total run time (until g ≥ hull size h):
⌈lg lg h⌉
�
t=1
O(n log(22t)) =
⌈lg lg h⌉
�
t=1
O(n2t) = O(n
⌈lg lg h⌉
�
t=1
2t) = O(n lg h)
3 / 9

Voronoi diagrams
4 / 9

Voronoi diagrams
4 / 9

Voronoi diagrams
Definition
A Voronoi diagram of a set of n sites (points) s1, . . . , sn is a set
of regions R1, . . . , Rn where Ri is the set of points x such that
d(x, si) ≤ d(x, sj) for all j.
A Voronoi edge is the border between two regions:
{x|x ∈ Ri and x ∈ Rj and i ̸= j}.
A Voronoi vertex is the intersection of Voronoi edges:
{x|x in more than 2 Vor. Regions}.
Problem Given S = s1, s2, . . . , sn, find Voronoi vertices and edges
5 / 9

Voronoi Diagram using Divide and Conquer [Shamos & Hoey ’75]
This algorithm finds both VorD and CH of S.
0. Sort sites by x-coord
VorD+CHull(S)
1. if |S| = 1 return VorD = ∅ and CHull = [s1]
2. if |S| = 2 return VorD =⊥ -bisector of s1s2 and CHull = [s1s2]
3. Recursively find VorDL and CHullL of s1, . . . , sn/2
4. Recursively find VorDR and CHullR of sn/2+1, . . . , sn
5. Merge CHullL and CHullR to get CHull
6. Stitch together VorDL and VorDR to get VorD
7. Return VorD and CHull
6 / 9

Merge CHullL and CHullR
CHullL
CHullR
See your Homework 1 for a (more general) O(n) time solution.
The two blue lines are the upper and lower bridges.
7 / 9

Stitch together VorDL and VorDR
2
1
3
4
5
6
1. Let pq be upper bridge
2. Find intersection of ⊥ pq with
edge of VorDL(p) and VorDR(q)
3. If ⊥ pq intersects ⊥ pp′ before
⊥ qq′ then p = p′ else q = q′
4. Repeat until pq is lower bridge
Note: Step 2 can be done by scanning edges of VorDL(p) cw and
VorDR(q) ccw (no backtracking).
8 / 9

Example from Computational Geometry by Preparate & Shamos
9 / 9